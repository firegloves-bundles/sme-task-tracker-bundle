{"version":3,"sources":["auth/KeycloakContext.js","custom-elements/widgetEventTypes.js","helpers/widgetEvents.js","i18n/locales/index.js","i18n/i18next.js","i18n/setLocale.js","i18n/constants.js","auth/KeycloakViews.js","context/InfoBuildContext.js","context/InfoBuildManager.js","components/common/Notification.js","components/style/infoBuildStyle.js","components/InfoBuild.js","api/helpers.js","api/info.js","context/InfoBuildProvider.js","custom-elements/TaskInfoBuildElement.js"],"names":["KeycloakContext","React","createContext","INPUT_EVENT_TYPES","subscribeToWidgetEvent","eventType","eventHandler","window","addEventListener","removeEventListener","it","en","resources","Object","keys","locales","reduce","acc","lang","i18next","t","locale","defaultLocale","use","initReactI18next","init","defaultNs","interpolation","escapeValue","lng","fallbackLng","react","useSuspense","setI18nextLocale","AuthenticatedView","children","keycloak","initialized","authenticated","InfoBuildCotext","InfoBuildManager","useContext","InfoBuildContext","state","setState","info","error","clearError","prev","statusIcon","success","CheckCircleIcon","ErrorIcon","InfoIcon","autoHideDurations","Notification","className","classes","passedStatus","status","message","onClose","anchorOrigin","INFO","Icon","autoHideDuration","useState","isOpen","setOpen","messageTemplate","clsx","icon","iconStatus","useEffect","handleClose","event","reason","Snackbar","open","SnackbarContent","action","IconButton","key","aria-label","color","onClick","SUCCESS","ERROR","defaultProps","vertical","horizontal","withStyles","theme","display","alignItems","fontSize","opacity","marginRight","spacing","backgroundColor","green","palette","dark","primary","main","withTheme","infoBuildStyle","makeStyles","root","background","paper","InfoBuild","css","Box","width","List","map","i","ListItemText","name","secondary","version","request","url","options","a","haveBodyResponse","fetch","response","json","Promise","reject","Error","statusText","apiInfoBuildGet","serviceUrl","method","InfoBuildProvider","serviceUrlTaskTracker","serviceUrlAttachments","serviceUrlSigeIntegration","serviceUrlNotification","serviceUrlEdoUser","useMock","useTranslation","promises","all","result","payload","fetchData","Provider","value","getKeycloakInstance","entando","ATTRIBUTES","hidden","disableDefaultEventHandler","TaskInfoBuildElement","oldValue","newValue","this","container","values","includes","onToggleDisableDefaultEvent","render","document","createElement","mountPoint","appendChild","shadowRoot","attachShadow","mode","jss","jssCreate","jssPreset","insertionPoint","muiTheme","createMuiTheme","props","MuiDialog","MuiPopover","itIT","unsubscribeFromKeycloakEvent","unsubscribeFromTaskEvent","evt","console","log","retargetEvents","disableEventHandler","getAttribute","defaultEventHandlerDisabled","unsubscribeFromWidgetEvents","ReactDOM","setLocale","StylesProvider","ThemeProvider","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.e26275a5.chunk.js","sourcesContent":["import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","export const INPUT_EVENT_TYPES = {\n  detailTask: 'task.detail',\n};\n\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\n","export const publishWidgetEvent = (eventType, payload) => {\n  const widgetEvent = new CustomEvent(eventType, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = eventType => payload =>\n  publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = widgetEvent => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","import it from 'i18n/locales/it.json';\nimport en from 'i18n/locales/en.json';\n\nexport default {\n  it,\n  en,\n};\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport locales from 'i18n/locales';\n\nconst defaultNs = 'translation';\n\n// adds the default namespace to the locales\nconst resources = Object.keys(locales).reduce(\n  (acc, lang) => ({ ...acc, [lang]: { [defaultNs]: locales[lang] } }),\n  {}\n);\n\nexport const translateFn = i18next.t;\n\nexport const setI18nextLocale = (locale, defaultLocale) => {\n  i18next.use(initReactI18next).init({\n    defaultNs,\n    interpolation: {\n      escapeValue: false,\n    },\n    resources,\n    lng: locale || defaultLocale,\n    fallbackLng: defaultLocale,\n    react: { useSuspense: false },\n  });\n};\n","import { DEFAULT_LOCALE } from 'i18n/constants';\nimport { setI18nextLocale } from 'i18n/i18next';\n\nexport default locale => {\n  setI18nextLocale(locale, DEFAULT_LOCALE);\n};\n","export const DEFAULT_LOCALE = 'it'; // eslint-disable-line import/prefer-default-export\n","const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport default AuthenticatedView;\n","import { createContext } from 'react';\n\nconst InfoBuildCotext = createContext([{}, () => {}]);\n\nexport default InfoBuildCotext;\n","import { useContext } from 'react';\nimport InfoBuildContext from './InfoBuildContext';\n\nconst InfoBuildManager = () => {\n  const [state, setState] = useContext(InfoBuildContext);\n\n  const clearError = () => setState(prev => ({ ...prev, error: null }));\n  return {\n    info: state.info,\n    error: state.error,\n    clearError,\n  };\n};\nexport default InfoBuildManager;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconStatus: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n});\n\nconst statusIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst autoHideDurations = {\n  success: 3000,\n  error: 5000,\n  info: 5000,\n};\n\nconst Notification = ({\n  className,\n  classes,\n  status: passedStatus,\n  message,\n  onClose,\n  anchorOrigin,\n}) => {\n  const status = passedStatus || Notification.INFO;\n  const Icon = statusIcon[status];\n  const autoHideDuration = autoHideDurations[status];\n  const [isOpen, setOpen] = useState(false);\n\n  const messageTemplate = (\n    <span className={classes.message}>\n      <Icon className={clsx(classes.icon, classes.iconStatus)} />\n      {message}\n    </span>\n  );\n\n  useEffect(() => {\n    if (message) {\n      setOpen(true);\n    }\n  }, [message]);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  return (\n    <Snackbar\n      open={isOpen}\n      onClose={handleClose}\n      autoHideDuration={autoHideDuration}\n      anchorOrigin={anchorOrigin}\n    >\n      <SnackbarContent\n        className={clsx(classes[status], className)}\n        message={messageTemplate}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nNotification.SUCCESS = 'success';\nNotification.ERROR = 'error';\nNotification.INFO = 'info';\n\nNotification.propTypes = {\n  classes: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    iconStatus: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n  status: PropTypes.oneOf([Notification.SUCCESS, Notification.ERROR, Notification.INFO]),\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  anchorOrigin: PropTypes.shape({}),\n};\n\nNotification.defaultProps = {\n  message: null,\n  className: '',\n  status: Notification.INFO,\n  onClose: () => {},\n  anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\n};\n\nexport default withStyles(styles, { withTheme: true })(Notification);\n","import { makeStyles } from '@material-ui/core';\n\nconst infoBuildStyle = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default infoBuildStyle;\n","import { Box, List, ListItemText } from '@material-ui/core';\nimport React from 'react';\nimport InfoBuildManager from '../context/InfoBuildManager';\nimport Notification from './common/Notification';\nimport infoBuildStyle from './style/infoBuildStyle';\n\nconst InfoBuild = () => {\n  const { info, error, clearError } = InfoBuildManager();\n  const css = infoBuildStyle();\n  return (\n    <Box width={1}>\n      <List className={css.root}>\n        {info.map(i => (\n          <ListItemText key={i.name} primary={i.name} secondary={i.version} />\n        ))}\n      </List>\n      <Notification\n        message={error}\n        onClose={clearError}\n        status=\"error\"\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      />\n    </Box>\n  );\n};\n\nexport default InfoBuild;\n","export const getKeycloakToken = () => {\n  if (\n    window &&\n    window.entando &&\n    window.entando.keycloak &&\n    window.entando.keycloak.authenticated\n  ) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const request = async (url, options, haveBodyResponse = true) => {\n  const response = await fetch(url, options);\n  if (response.status === 204) {\n    return {};\n  }\n  if (response.status >= 200 && response.status < 300) {\n    if (haveBodyResponse) {\n      return response.json();\n    }\n    return {};\n  }\n  return Promise.reject(new Error(response.statusText || response.status));\n};\n","import { request } from 'api/helpers';\n\nconst resource = 'buildInfo';\n\nconst apiInfoBuildGet = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport default apiInfoBuildGet;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport apiInfoBuildGet from '../api/info';\nimport InfoBuildCotext from './InfoBuildContext';\n\nconst InfoBuildProvider = ({\n  children,\n  keycloak,\n  serviceUrlTaskTracker,\n  serviceUrlAttachments,\n  serviceUrlSigeIntegration,\n  serviceUrlNotification,\n  serviceUrlEdoUser,\n  useMock,\n}) => {\n  const [state, setState] = useState({\n    info: [],\n    error: null,\n  });\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (keycloak.initialized && keycloak.authenticated) {\n      const fetchData = async () => {\n        try {\n          if (useMock) {\n            setState(prev => ({ ...prev }));\n          } else {\n            const promises = [\n              apiInfoBuildGet(serviceUrlTaskTracker),\n              apiInfoBuildGet(serviceUrlAttachments),\n              apiInfoBuildGet(serviceUrlSigeIntegration),\n              apiInfoBuildGet(serviceUrlNotification),\n              apiInfoBuildGet(serviceUrlEdoUser),\n            ];\n            const result = await Promise.all(promises);\n            const info = [\n              { name: 'Task Tracker', version: result[0].payload },\n              { name: 'Attachments', version: result[1].payload },\n              { name: 'Sige Integration', version: result[2].payload },\n              { name: 'Notification', version: result[3].payload },\n              { name: 'Edo User', version: result[4].payload },\n            ];\n            setState(prev => ({ ...prev, info }));\n          }\n        } catch (e) {\n          setState({ info: [], error: t('message.error') });\n        }\n      };\n      fetchData();\n    }\n  }, [keycloak.initialized, keycloak.authenticated]);\n\n  return <InfoBuildCotext.Provider value={[state, setState]}>{children}</InfoBuildCotext.Provider>;\n};\nInfoBuildProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  keycloak: PropTypes.shape({\n    initialized: PropTypes.bool,\n    authenticated: PropTypes.bool,\n  }),\n  serviceUrlTaskTracker: PropTypes.string.isRequired,\n  serviceUrlAttachments: PropTypes.string.isRequired,\n  serviceUrlSigeIntegration: PropTypes.string.isRequired,\n  serviceUrlNotification: PropTypes.string.isRequired,\n  serviceUrlEdoUser: PropTypes.string.isRequired,\n  useMock: PropTypes.bool,\n};\n\nInfoBuildProvider.defaultProps = {\n  keycloak: {\n    initialized: false,\n    authenticated: false,\n  },\n  useMock: false,\n};\n\nexport default InfoBuildProvider;\n","import { createMuiTheme } from '@material-ui/core';\nimport { itIT } from '@material-ui/core/locale';\n\nimport { jssPreset, StylesProvider, ThemeProvider } from '@material-ui/core/styles';\n\nimport KeycloakContext from 'auth/KeycloakContext';\nimport { INPUT_EVENT_TYPES, KEYCLOAK_EVENT_TYPE } from 'custom-elements/widgetEventTypes';\nimport { subscribeToWidgetEvent } from 'helpers/widgetEvents';\nimport setLocale from 'i18n/setLocale';\nimport { create as jssCreate } from 'jss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport retargetEvents from 'react-shadow-dom-retarget-events';\nimport AuthenticatedView from '../auth/KeycloakViews';\nimport InfoBuild from '../components/InfoBuild';\nimport InfoBuildProvider from '../context/InfoBuildProvider';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrlTaskTracker: 'service-url-task-tracker',\n  serviceUrlAttachments: 'service-url-attachments',\n  serviceUrlSigeIntegration: 'service-url-sige-integration',\n  serviceUrlNotification: 'service-url-notification',\n  serviceUrlEdoUser: 'service-url-edo-user',\n  useMock: 'use-mock',\n};\n\nclass TaskInfoBuildElement extends HTMLElement {\n  jss;\n\n  container;\n\n  mountPoint;\n\n  keycloak = getKeycloakInstance();\n\n  unsubscribeFromTaskEvent;\n\n  unsubscribeFromKeycloakEvent;\n\n  defaultEventHandlerDisabled;\n\n  muiTheme;\n\n  static get observedAttributes() {\n    return Object.values(ATTRIBUTES);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (!this.container || oldValue === newValue) {\n      return;\n    }\n    if (!Object.values(ATTRIBUTES).includes(name)) {\n      throw new Error(`Untracked changed attribute: ${name}`);\n    }\n    if (name === ATTRIBUTES.disableDefaultEventHandler) {\n      this.onToggleDisableDefaultEvent();\n    }\n    this.render();\n  }\n\n  connectedCallback() {\n    this.container = document.createElement('div');\n    this.mountPoint = document.createElement('div');\n    this.container.appendChild(this.mountPoint);\n\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(this.container);\n\n    this.jss = jssCreate({\n      ...jssPreset(),\n      insertionPoint: this.container,\n    });\n\n    this.muiTheme = createMuiTheme(\n      {\n        props: {\n          MuiDialog: {\n            container: this.mountPoint,\n          },\n          MuiPopover: {\n            container: this.mountPoint,\n          },\n        },\n      },\n      itIT\n    );\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.unsubscribeFromTaskEvent = subscribeToWidgetEvent(INPUT_EVENT_TYPES.detailTask, evt => {\n      console.log('detail Task', evt);\n    });\n\n    this.onToggleDisableDefaultEvent();\n\n    this.render();\n\n    retargetEvents(shadowRoot);\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribeFromKeycloakEvent) {\n      this.unsubscribeFromKeycloakEvent();\n    }\n    if (this.unsubscribeFromTaskEvent) {\n      this.unsubscribeFromTaskEvent();\n    }\n  }\n\n  onToggleDisableDefaultEvent() {\n    const disableEventHandler = this.getAttribute(ATTRIBUTES.disableDefaultEventHandler) === 'true';\n\n    if (disableEventHandler !== this.defaultEventHandlerDisabled) {\n      // eslint-disable-next-line no-empty\n      if (!disableEventHandler) {\n      } else {\n        if (this.unsubscribeFromWidgetEvents) {\n          this.unsubscribeFromWidgetEvents();\n        }\n        if (this.unsubscribeFromKeycloakEvent) {\n          this.unsubscribeFromKeycloakEvent();\n        }\n      }\n      this.defaultEventHandlerDisabled = disableEventHandler;\n    }\n  }\n\n  render() {\n    const serviceUrlTaskTracker = this.getAttribute(ATTRIBUTES.serviceUrlTaskTracker) || '';\n    const serviceUrlAttachments = this.getAttribute(ATTRIBUTES.serviceUrlAttachments) || '';\n    const serviceUrlSigeIntegration = this.getAttribute(ATTRIBUTES.serviceUrlSigeIntegration) || '';\n    const serviceUrlNotification = this.getAttribute(ATTRIBUTES.serviceUrlNotification) || '';\n    const serviceUrlEdoUser = this.getAttribute(ATTRIBUTES.serviceUrlEdoUser) || '';\n    const useMock = this.getAttribute(ATTRIBUTES.useMock) || false;\n    const hidden = this.getAttribute(ATTRIBUTES.hidden) === 'true';\n    if (hidden) {\n      ReactDOM.render(<></>);\n      return;\n    }\n    const locale = this.getAttribute(ATTRIBUTES.locale) || 'it';\n    setLocale(locale);\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <StylesProvider jss={this.jss}>\n          <ThemeProvider theme={this.muiTheme}>\n            <InfoBuildProvider\n              keycloak={this.keycloak}\n              useMock={useMock}\n              serviceUrlTaskTracker={serviceUrlTaskTracker}\n              serviceUrlAttachments={serviceUrlAttachments}\n              serviceUrlSigeIntegration={serviceUrlSigeIntegration}\n              serviceUrlNotification={serviceUrlNotification}\n              serviceUrlEdoUser={serviceUrlEdoUser}\n            >\n              <AuthenticatedView keycloak={this.keycloak}>\n                <InfoBuild />\n              </AuthenticatedView>\n            </InfoBuildProvider>\n          </ThemeProvider>\n        </StylesProvider>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('task-info-build', TaskInfoBuildElement);\n"],"sourceRoot":""}