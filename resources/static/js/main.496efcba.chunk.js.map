{"version":3,"sources":["auth/KeycloakContext.js","custom-elements/widgetEventTypes.js","helpers/widgetEvents.js","i18n/locales/index.js","i18n/i18next.js","i18n/setLocale.js","i18n/constants.js","auth/KeycloakViews.js","context/VersionContext.js","context/VersionManager.js","components/common/NotificationContainer.js","components/Version.js","api/helpers.js","api/info.js","components/__mocks__/mock.js","context/VersionProvider.js","custom-elements/TaskVersionElement.js"],"names":["KeycloakContext","React","createContext","INPUT_EVENT_TYPES","subscribeToWidgetEvent","eventType","eventHandler","window","addEventListener","removeEventListener","it","en","resources","Object","keys","locales","reduce","acc","lang","i18next","t","locale","defaultLocale","use","initReactI18next","init","defaultNs","interpolation","escapeValue","lng","fallbackLng","react","useSuspense","setI18nextLocale","AuthenticatedView","children","keycloak","initialized","authenticated","VersionContext","VersionManager","useContext","state","setState","info","error","clearError","prev","NotificationContainer","message","callback","status","autoHideDuration","useSnackbar","enqueueSnackbar","closeSnackbar","options","variant","action","key","IconButton","onClick","useEffect","defaultProps","undefined","Version","maxSnack","anchorOrigin","vertical","horizontal","TransitionComponent","Slide","Box","width","marginRight","Typography","request","url","a","haveBodyResponse","fetch","response","json","Promise","reject","Error","statusText","apiInfoBuildGet","serviceUrl","method","mockInfo","VersionProvider","useMock","useState","useTranslation","payload","result","fetchData","Provider","value","getKeycloakInstance","entando","ATTRIBUTES","hidden","disableDefaultEventHandler","TaskVersionElement","name","oldValue","newValue","this","container","values","includes","onToggleDisableDefaultEvent","render","document","createElement","mountPoint","appendChild","shadowRoot","attachShadow","mode","jss","jssCreate","jssPreset","insertionPoint","muiTheme","createMuiTheme","props","MuiDialog","MuiPopover","itIT","unsubscribeFromKeycloakEvent","unsubscribeFromTaskEvent","evt","console","log","retargetEvents","disableEventHandler","getAttribute","defaultEventHandlerDisabled","unsubscribeFromWidgetEvents","ReactDOM","setLocale","StylesProvider","ThemeProvider","theme","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.496efcba.chunk.js","sourcesContent":["import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","export const INPUT_EVENT_TYPES = {\n  detailTask: 'task.detail',\n};\n\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\n","export const publishWidgetEvent = (eventType, payload) => {\n  const widgetEvent = new CustomEvent(eventType, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = eventType => payload =>\n  publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = widgetEvent => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","import it from 'i18n/locales/it.json';\nimport en from 'i18n/locales/en.json';\n\nexport default {\n  it,\n  en,\n};\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport locales from 'i18n/locales';\n\nconst defaultNs = 'translation';\n\n// adds the default namespace to the locales\nconst resources = Object.keys(locales).reduce(\n  (acc, lang) => ({ ...acc, [lang]: { [defaultNs]: locales[lang] } }),\n  {}\n);\n\nexport const translateFn = i18next.t;\n\nexport const setI18nextLocale = (locale, defaultLocale) => {\n  i18next.use(initReactI18next).init({\n    defaultNs,\n    interpolation: {\n      escapeValue: false,\n    },\n    resources,\n    lng: locale || defaultLocale,\n    fallbackLng: defaultLocale,\n    react: { useSuspense: false },\n  });\n};\n","import { DEFAULT_LOCALE } from 'i18n/constants';\nimport { setI18nextLocale } from 'i18n/i18next';\n\nexport default locale => {\n  setI18nextLocale(locale, DEFAULT_LOCALE);\n};\n","export const DEFAULT_LOCALE = 'it'; // eslint-disable-line import/prefer-default-export\n","const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport default AuthenticatedView;\n","import { createContext } from 'react';\n\nconst VersionContext = createContext([{}, () => {}]);\n\nexport default VersionContext;\n","import { useContext } from 'react';\nimport VersionContext from './VersionContext';\n\nconst VersionManager = () => {\n  const [state, setState] = useContext(VersionContext);\n\n  const clearError = () => setState(prev => ({ ...prev, error: null }));\n\n  return {\n    info: state.info,\n    error: state.error,\n    clearError,\n  };\n};\nexport default VersionManager;\n","import { IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\n\nconst NotificationContainer = ({ message, callback, status, autoHideDuration }) => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const options = {\n    variant: status,\n    autoHideDuration,\n    action: key => (\n      <IconButton\n        onClick={() => {\n          callback();\n          closeSnackbar(key);\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    ),\n  };\n\n  useEffect(() => {\n    if (message) {\n      enqueueSnackbar(message, options);\n    }\n  }, [message]);\n\n  return <></>;\n};\n\nNotificationContainer.propTypes = {\n  message: PropTypes.string,\n  callback: PropTypes.func,\n  status: PropTypes.oneOf(['success', 'error', 'info']).isRequired,\n  autoHideDuration: PropTypes.number,\n};\n\nNotificationContainer.defaultProps = {\n  message: undefined,\n  callback: () => {},\n  autoHideDuration: 3000,\n};\n\nexport default NotificationContainer;\n","import { Box, Slide, Typography } from '@material-ui/core';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport VersionManager from '../context/VersionManager';\nimport NotificationContainer from './common/NotificationContainer';\n\nconst Version = () => {\n  const { info, error, clearError } = VersionManager();\n\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      TransitionComponent={Slide}\n    >\n      <Box width={1}>\n        <Box marginRight={2}>\n          <Typography variant=\"h6\">{info}</Typography>\n        </Box>\n      </Box>\n      <NotificationContainer message={error} callback={clearError} status=\"error\" />\n    </SnackbarProvider>\n  );\n};\n\nexport default Version;\n","export const getKeycloakToken = () => {\n  if (\n    window &&\n    window.entando &&\n    window.entando.keycloak &&\n    window.entando.keycloak.authenticated\n  ) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const request = async (url, options, haveBodyResponse = true) => {\n  const response = await fetch(url, options);\n  if (response.status === 204) {\n    return {};\n  }\n  if (response.status >= 200 && response.status < 300) {\n    if (haveBodyResponse) {\n      return response.json();\n    }\n    return {};\n  }\n  return Promise.reject(new Error(response.statusText || response.status));\n};\n","import { request } from 'api/helpers';\n\nconst resource = 'buildInfo';\n\nconst apiInfoBuildGet = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport default apiInfoBuildGet;\n","const mockInfo = {\n    \"payload\": \"0.0.223\",\n    \"metadata\": {}\n}\n\nexport default mockInfo;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport apiInfoBuildGet from '../api/info';\n\nimport VersionContext from './VersionContext';\nimport mockInfo from 'components/__mocks__/mock';\n\nconst VersionProvider = ({ children, keycloak, serviceUrl, useMock }) => {\n  const [state, setState] = useState({\n    info: [],\n    error: null,\n  });\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (keycloak.initialized && keycloak.authenticated) {\n      const fetchData = async () => {\n        try {\n          if (useMock) {\n            setState(prev => ({ ...prev, info: mockInfo.payload }));\n          } else {\n            const result = await apiInfoBuildGet(serviceUrl);\n            setState(prev => ({ ...prev, info: result.payload }));\n          }\n        } catch (e) {\n          setState({ info: [], error: t('message.error') });\n        }\n      };\n      fetchData();\n    }\n  }, [keycloak.initialized, keycloak.authenticated]);\n\n  return <VersionContext.Provider value={[state, setState]}>{children} </VersionContext.Provider>;\n};\n\nVersionProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  keycloak: PropTypes.shape({\n    initialized: PropTypes.bool,\n    authenticated: PropTypes.bool,\n  }),\n  serviceUrl: PropTypes.string.isRequired,\n  useMock: PropTypes.bool,\n};\n\nVersionProvider.defaultProps = {\n  keycloak: {\n    initialized: false,\n    authenticated: false,\n  },\n  useMock: false,\n};\n\nexport default VersionProvider;\n","import { createMuiTheme } from '@material-ui/core';\nimport { itIT } from '@material-ui/core/locale';\n\nimport { jssPreset, StylesProvider, ThemeProvider } from '@material-ui/core/styles';\n\nimport KeycloakContext from 'auth/KeycloakContext';\nimport { INPUT_EVENT_TYPES, KEYCLOAK_EVENT_TYPE } from 'custom-elements/widgetEventTypes';\nimport { subscribeToWidgetEvent } from 'helpers/widgetEvents';\nimport setLocale from 'i18n/setLocale';\nimport { create as jssCreate } from 'jss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport retargetEvents from 'react-shadow-dom-retarget-events';\nimport AuthenticatedView from '../auth/KeycloakViews';\nimport Version from '../components/Version';\nimport VersionProvider from '../context/VersionProvider';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n  useMock: 'use-mock',\n};\n\nclass TaskVersionElement extends HTMLElement {\n  jss;\n\n  container;\n\n  mountPoint;\n\n  keycloak = getKeycloakInstance();\n\n  unsubscribeFromTaskEvent;\n\n  unsubscribeFromKeycloakEvent;\n\n  defaultEventHandlerDisabled;\n\n  muiTheme;\n\n  static get observedAttributes() {\n    return Object.values(ATTRIBUTES);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (!this.container || oldValue === newValue) {\n      return;\n    }\n    if (!Object.values(ATTRIBUTES).includes(name)) {\n      throw new Error(`Untracked changed attribute: ${name}`);\n    }\n    if (name === ATTRIBUTES.disableDefaultEventHandler) {\n      this.onToggleDisableDefaultEvent();\n    }\n    this.render();\n  }\n\n  connectedCallback() {\n    this.container = document.createElement('div');\n    this.mountPoint = document.createElement('div');\n    this.container.appendChild(this.mountPoint);\n\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(this.container);\n\n    this.jss = jssCreate({\n      ...jssPreset(),\n      insertionPoint: this.container,\n    });\n\n    this.muiTheme = createMuiTheme(\n      {\n        props: {\n          MuiDialog: {\n            container: this.mountPoint,\n          },\n          MuiPopover: {\n            container: this.mountPoint,\n          },\n        },\n      },\n      itIT\n    );\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.unsubscribeFromTaskEvent = subscribeToWidgetEvent(INPUT_EVENT_TYPES.detailTask, evt => {\n      console.log('detail Task', evt);\n    });\n\n    this.onToggleDisableDefaultEvent();\n\n    this.render();\n\n    retargetEvents(shadowRoot);\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribeFromKeycloakEvent) {\n      this.unsubscribeFromKeycloakEvent();\n    }\n    if (this.unsubscribeFromTaskEvent) {\n      this.unsubscribeFromTaskEvent();\n    }\n  }\n\n  onToggleDisableDefaultEvent() {\n    const disableEventHandler = this.getAttribute(ATTRIBUTES.disableDefaultEventHandler) === 'true';\n\n    if (disableEventHandler !== this.defaultEventHandlerDisabled) {\n      // eslint-disable-next-line no-empty\n      if (!disableEventHandler) {\n      } else {\n        if (this.unsubscribeFromWidgetEvents) {\n          this.unsubscribeFromWidgetEvents();\n        }\n        if (this.unsubscribeFromKeycloakEvent) {\n          this.unsubscribeFromKeycloakEvent();\n        }\n      }\n      this.defaultEventHandlerDisabled = disableEventHandler;\n    }\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const hidden = this.getAttribute(ATTRIBUTES.hidden) === 'true';\n    const useMock = this.getAttribute(ATTRIBUTES.useMock) === 'true';\n    if (hidden) {\n      ReactDOM.render(<></>);\n      return;\n    }\n    const locale = this.getAttribute(ATTRIBUTES.locale) || 'it';\n    setLocale(locale);\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <StylesProvider jss={this.jss}>\n          <ThemeProvider theme={this.muiTheme}>\n            <VersionProvider keycloak={this.keycloak} serviceUrl={serviceUrl} useMock={useMock}>\n              <AuthenticatedView keycloak={this.keycloak}>\n                <Version />\n              </AuthenticatedView>\n            </VersionProvider>\n          </ThemeProvider>\n        </StylesProvider>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('task-version', TaskVersionElement);\n"],"sourceRoot":""}